turtleDocument ::= ([ws] statement {[ws] statement} [ws]) 
statement ::= ((directive ".") | (triples ".")) 
directive ::= (prefixID | base) 
prefixID ::= ("@prefix" ws [prefixName] ":" [ws] uriref) 
base ::= ("@base" ws uriref) 
triples ::= (subject ws predicateObjectList) 
predicateObjectList ::= (verb ws objectList {";" [ws] verb ws objectList}) 
objectList ::= (object {"," [ws] object}) 
verb ::= (resource | "a") 
subject ::= (resource | nodeID | "[]") 
object ::= (resource | literal | nodeID | "[]") 
literal ::= ((quotedString ["@" language]) | datatypeString | integer | double | decimal | boolean)
datatypeString ::= (quotedString "^^" resource)
digits ::= (%digit% {%digit%})
sign ::= ("-" | "+")
integer ::= ([sign] digits) 
double ::= ([sign] ((digits "." [digits] exponent) | ("." digits exponent) | (digits exponent)))
decimal ::= ([sign] ((digits "." {digits}) | ("." digits) | digits)) 
exponent ::= (["e" | "E"] [sign] digits) 
boolean ::= ("true" | "false") 
resource ::= (uriref | qname) 
nodeID ::= ("_:" name)
qname ::= ([prefixName] ":" [name]) 
language ::= ((%lower% {%lower%}) {"-" ((%lower% | %digit%) {(%lower% | %digit%)})})  
uriref ::= %net.sf.meteor.utils.URIMatcher%
name ::= %net.sf.meteor.utils.TurtleGrammer.NameMatcher%  
prefixName ::= %net.sf.meteor.utils.TurtleGrammer.NameMatcher%
quotedString ::= %com.googlecode.meteorframework.parser.QuotedStringMatcher% 
ws ::= %com.googlecode.meteorframework.parser.WhitespaceMatcher% 
