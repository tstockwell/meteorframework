<?xml version="1.0" encoding="UTF-8"?>
<project name="org.jlense.test" default="build.jars" basedir=".">

	<property name="basews" value="${ws}"/>
	<property name="baseos" value="${os}"/>
	<property name="basearch" value="${arch}"/>
	<property name="basenl" value="${nl}"/>

	<!-- Compiler settings. -->
	<property name="javacFailOnError" value="false"/>
	<property name="javacDebugInfo" value="on"/>
	<property name="javacVerbose" value="true"/>
	<property name="javacSource" value="1.3"/>
	<property name="javacTarget" value="1.2"/>
	<property name="compilerArg" value=""/>
	<path id="path_bootclasspath">
		<fileset dir="${java.home}/lib">
			<include name="*.jar"/>
		</fileset>
	</path>
	<property name="bootclasspath" refid="path_bootclasspath"/>

	<target name="init" depends="properties">
		<condition property="pluginTemp" value="${buildTempFolder}/plugins">
			<isset property="buildTempFolder"/>
		</condition>
		<property name="pluginTemp" value="${basedir}"/>
		<condition property="build.result.folder" value="${pluginTemp}/org.jlense.test">
			<isset property="buildTempFolder"/>
		</condition>
		<property name="build.result.folder" value="${basedir}"/>
		<property name="temp.folder" value="${basedir}/temp.folder"/>
		<property name="plugin.destination" value="${basedir}"/>
	</target>

	<target name="properties" if="eclipse.running">
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>

	</target>

	<target name="build.update.jar" depends="init" description="Build the plug-in: org.jlense.test for an update site.">
		<delete dir="${temp.folder}"/>
		<mkdir dir="${temp.folder}"/>
		<antcall target="build.jars"/>
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<zip destfile="${plugin.destination}/org.jlense.test_1.0.0.jar" basedir="${temp.folder}/org.jlense.test_1.0.0" filesonly="false" whenempty="skip" update="false"/>
		<delete dir="${temp.folder}"/>
	</target>

	<target name="library.jar" depends="init" unless="library.jar" description="Create jar: org.jlense.test library.jar.">
		<delete dir="${temp.folder}/library.jar.bin"/>
		<mkdir dir="${temp.folder}/library.jar.bin"/>
		<!-- compile the source code -->
		<javac destdir="${temp.folder}/library.jar.bin" failonerror="${javacFailOnError}" verbose="${javacVerbose}" debug="${javacDebugInfo}" includeAntRuntime="no" bootclasspath="${bootclasspath}" source="${javacSource}" target="${javacTarget}"		>
			<compilerarg line="${compilerArg}"/>
			<classpath>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.eclipse.core.runtime.compatibility_3.0.0/compatibility.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.eclipse.core.runtime_3.0.2/runtime.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.eclipse.osgi_3.0.1/osgi.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.eclipse.osgi_3.0.1/core.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.eclipse.osgi_3.0.1/resolver.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.eclipse.osgi_3.0.1/defaultAdaptor.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.eclipse.osgi_3.0.1/eclipseAdaptor.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.eclipse.osgi_3.0.1/console.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.eclipse.update.configurator_3.0.0/configurator.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.apache.ant_1.6.2/lib/ant.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.apache.ant_1.6.2/lib/ant-antlr.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.apache.ant_1.6.2/lib/ant-apache-bcel.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.apache.ant_1.6.2/lib/ant-apache-bsf.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.apache.ant_1.6.2/lib/ant-apache-log4j.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.apache.ant_1.6.2/lib/ant-apache-oro.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.apache.ant_1.6.2/lib/ant-apache-regexp.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.apache.ant_1.6.2/lib/ant-apache-resolver.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.apache.ant_1.6.2/lib/ant-commons-logging.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.apache.ant_1.6.2/lib/ant-commons-net.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.apache.ant_1.6.2/lib/ant-icontract.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.apache.ant_1.6.2/lib/ant-jai.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.apache.ant_1.6.2/lib/ant-javamail.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.apache.ant_1.6.2/lib/ant-jdepend.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.apache.ant_1.6.2/lib/ant-jmf.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.apache.ant_1.6.2/lib/ant-jsch.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.apache.ant_1.6.2/lib/ant-junit.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.apache.ant_1.6.2/lib/ant-launcher.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.apache.ant_1.6.2/lib/ant-netrexx.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.apache.ant_1.6.2/lib/ant-nodeps.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.apache.ant_1.6.2/lib/ant-starteam.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.apache.ant_1.6.2/lib/ant-stylebook.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.apache.ant_1.6.2/lib/ant-swing.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.apache.ant_1.6.2/lib/ant-trax.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.apache.ant_1.6.2/lib/ant-vaj.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.apache.ant_1.6.2/lib/ant-weblogic.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.apache.ant_1.6.2/lib/ant-xalan1.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.apache.ant_1.6.2/lib/ant-xslp.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.junit_3.8.1/junit.jar"/>
				<pathelement path="../com.rpc.core.utils/bin"/>
				<pathelement path="../com.rpc.core.utils/bin/"/>
				<pathelement path="../com.rpc.core.utils/library.jar"/>
				<pathelement path="${build.result.folder}/../javax.activation/activation.jar"/>
				<pathelement path="../javax.activation/activation.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.eclipse.swt_3.0.2/ws/${basews}/swt.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.eclipse.swt.win32_3.0.2/ws/${basews}/swt.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.eclipse.swt.win32_3.0.2/@dot"/>
				<pathelement path="${build.result.folder}/../org.apache.commons/bin"/>
				<pathelement path="${build.result.folder}/../org.apache.commons/commons-dbcp-1.1.jar"/>
				<pathelement path="${build.result.folder}/../org.apache.commons/commons-validator.jar"/>
				<pathelement path="${build.result.folder}/../org.apache.commons/commons-beanutils-1.6.1.jar"/>
				<pathelement path="${build.result.folder}/../org.apache.commons/commons-collections.jar"/>
				<pathelement path="${build.result.folder}/../org.apache.commons/commons-daemon.jar"/>
				<pathelement path="${build.result.folder}/../org.apache.commons/commons-discovery_0.1.0.jar"/>
				<pathelement path="${build.result.folder}/../org.apache.commons/commons-fileupload-1.0.jar"/>
				<pathelement path="${build.result.folder}/../org.apache.commons/commons-httpclient.jar"/>
				<pathelement path="${build.result.folder}/../org.apache.commons/commons-httpclient-webdavlib.jar"/>
				<pathelement path="${build.result.folder}/../org.apache.commons/commons-lang.jar"/>
				<pathelement path="${build.result.folder}/../org.apache.commons/commons-logging_1.0.3.jar"/>
				<pathelement path="${build.result.folder}/../org.apache.commons/commons-modeler.jar"/>
				<pathelement path="${build.result.folder}/../org.apache.commons/commons-pool-1.1.jar"/>
				<pathelement path="${build.result.folder}/../org.apache.commons/commons-resources.jar"/>
				<pathelement path="${build.result.folder}/../org.apache.commons/jakarta-oro.jar"/>
				<pathelement path="${build.result.folder}/../org.apache.commons/commons-digester-1.7.jar"/>
				<pathelement path="../org.apache.commons/bin/"/>
				<pathelement path="${build.result.folder}/../org.apache.commons/bin/"/>
				<pathelement path="../org.apache.commons/commons-dbcp-1.1.jar"/>
				<pathelement path="../org.apache.commons/commons-validator.jar"/>
				<pathelement path="../org.apache.commons/commons-beanutils-1.6.1.jar"/>
				<pathelement path="../org.apache.commons/commons-collections.jar"/>
				<pathelement path="../org.apache.commons/commons-daemon.jar"/>
				<pathelement path="../org.apache.commons/commons-discovery_0.1.0.jar"/>
				<pathelement path="../org.apache.commons/commons-fileupload-1.0.jar"/>
				<pathelement path="../org.apache.commons/commons-httpclient.jar"/>
				<pathelement path="../org.apache.commons/commons-httpclient-webdavlib.jar"/>
				<pathelement path="../org.apache.commons/commons-lang.jar"/>
				<pathelement path="../org.apache.commons/commons-logging_1.0.3.jar"/>
				<pathelement path="../org.apache.commons/commons-modeler.jar"/>
				<pathelement path="../org.apache.commons/commons-pool-1.1.jar"/>
				<pathelement path="../org.apache.commons/commons-resources.jar"/>
				<pathelement path="../org.apache.commons/jakarta-oro.jar"/>
				<pathelement path="../org.apache.commons/commons-digester-1.7.jar"/>
				<pathelement path="${build.result.folder}/../org.apache.log4j/bin"/>
				<pathelement path="${build.result.folder}/../org.apache.log4j/log4j-1.2.8.jar"/>
				<pathelement path="../org.apache.log4j/bin/"/>
				<pathelement path="${build.result.folder}/../org.apache.log4j/bin/"/>
				<pathelement path="../org.apache.log4j/log4j-1.2.8.jar"/>
				<pathelement path="${build.result.folder}/../org.apache.log4j/library.jar"/>
				<pathelement path="${build.result.folder}/../net.sf.jasperreports/bin"/>
				<pathelement path="${build.result.folder}/../net.sf.jasperreports/itext-1.01.jar"/>
				<pathelement path="${build.result.folder}/../net.sf.jasperreports/jasperreports-1.0.2.jar"/>
				<pathelement path="../net.sf.jasperreports/bin/"/>
				<pathelement path="${build.result.folder}/../net.sf.jasperreports/bin/"/>
				<pathelement path="${build.result.folder}/../net.sf.jasperreports/library.jar"/>
				<pathelement path="../net.sf.jasperreports/itext-1.01.jar"/>
				<pathelement path="../net.sf.jasperreports/jasperreports-1.0.2.jar"/>
				<pathelement path="${build.result.folder}/../org.apache.xerces/bin"/>
				<pathelement path="${build.result.folder}/../org.apache.xerces/xmlParserAPIs.jar"/>
				<pathelement path="${build.result.folder}/../org.apache.xerces/xercesImpl.jar"/>
				<pathelement path="../org.apache.xerces/xmlParserAPIs.jar"/>
				<pathelement path="../org.apache.xerces/xercesImpl.jar"/>
				<pathelement path="${build.result.folder}/../org.apache.poi"/>
				<pathelement path="${build.result.folder}/../org.apache.poi/."/>
				<pathelement path="${build.result.folder}/../org.apache.poi/poi-2.5-final-20040302.jar"/>
				<pathelement path="../org.apache.poi/poi-2.5-final-20040302.jar"/>
				<pathelement path="${build.result.folder}/../org.apache.poi/./poi-2.5-final-20040302.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.eclipse.jdt.core_3.0.2/jdtcore.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.eclipse.core.resources_3.0.1/resources.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.eclipse.core.resources.win32_3.0.0/resources.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.eclipse.core.resources.win32_3.0.0/resources-win32.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.eclipse.text_3.0.1/text.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.eclipse.team.core_3.0.0/team.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.eclipse.jface_3.0.2/jface.jar"/>
				<pathelement path="${build.result.folder}/../net.sf.hibernate/bin"/>
				<pathelement path="${build.result.folder}/../net.sf.hibernate/asm.jar"/>
				<pathelement path="${build.result.folder}/../net.sf.hibernate/asm-attrs.jar"/>
				<pathelement path="${build.result.folder}/../net.sf.hibernate/antlr-2.7.5H3.jar"/>
				<pathelement path="${build.result.folder}/../net.sf.hibernate/dom4j-1.6.jar"/>
				<pathelement path="${build.result.folder}/../net.sf.hibernate/proxool-0.8.3.jar"/>
				<pathelement path="${build.result.folder}/../net.sf.hibernate/ehcache-1.1.jar"/>
				<pathelement path="${build.result.folder}/../net.sf.hibernate/cglib-2.1.jar"/>
				<pathelement path="${build.result.folder}/../net.sf.hibernate/hibernate-3.0.4.jar"/>
				<pathelement path="../net.sf.hibernate/asm.jar"/>
				<pathelement path="${build.result.folder}/../net.sf.hibernate/./asm.jar"/>
				<pathelement path="../net.sf.hibernate/asm-attrs.jar"/>
				<pathelement path="${build.result.folder}/../net.sf.hibernate/./asm-attrs.jar"/>
				<pathelement path="../net.sf.hibernate/antlr-2.7.5H3.jar"/>
				<pathelement path="${build.result.folder}/../net.sf.hibernate/./antlr-2.7.5H3.jar"/>
				<pathelement path="../net.sf.hibernate/dom4j-1.6.jar"/>
				<pathelement path="${build.result.folder}/../net.sf.hibernate/./dom4j-1.6.jar"/>
				<pathelement path="../net.sf.hibernate/proxool-0.8.3.jar"/>
				<pathelement path="${build.result.folder}/../net.sf.hibernate/./proxool-0.8.3.jar"/>
				<pathelement path="../net.sf.hibernate/ehcache-1.1.jar"/>
				<pathelement path="${build.result.folder}/../net.sf.hibernate/bin/"/>
				<pathelement path="${build.result.folder}/../net.sf.hibernate/library.jar"/>
				<pathelement path="../net.sf.hibernate/bin/"/>
				<pathelement path="../net.sf.hibernate/cglib-2.1.jar"/>
				<pathelement path="../net.sf.hibernate/hibernate-3.0.4.jar"/>
				<pathelement path="${build.result.folder}/../javax.transaction"/>
				<pathelement path="${build.result.folder}/../javax.transaction/."/>
				<pathelement path="${build.result.folder}/../javax.transaction/jta.jar"/>
				<pathelement path="../javax.transaction/jta.jar"/>
				<pathelement path="${build.result.folder}/../javax.mail"/>
				<pathelement path="${build.result.folder}/../javax.mail/."/>
				<pathelement path="${build.result.folder}/../javax.mail/mail.jar"/>
				<pathelement path="../javax.mail/mail.jar"/>
				<pathelement path="${build.result.folder}/../edu.oswego.cs.dl.util.concurrent/bin"/>
				<pathelement path="../edu.oswego.cs.dl.util.concurrent/bin/"/>
				<pathelement path="${build.result.folder}/../edu.oswego.cs.dl.util.concurrent/bin/"/>
				<pathelement path="${build.result.folder}/../edu.oswego.cs.dl.util.concurrent/library.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.eclipse.ui_3.0.2/ui.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.eclipse.help_3.0.0/help.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.eclipse.ui.workbench_3.0.2/compatibility.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.eclipse.ui.workbench_3.0.2/workbench.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.eclipse.ui.workbench.compatibility_3.0.0/compatibility.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.eclipse.ui.workbench.compatibility_3.0.0/workbench.jar"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.eclipse.ui.workbench.compatibility_3.0.0/@dot"/>
				<pathelement path="C:/eclipse-3.0.2/eclipse/plugins/org.eclipse.core.expressions_3.0.0/expressions.jar"/>
				<pathelement path="bin/"/>
				<pathelement path="${build.result.folder}/../org.jlense.test/bin/"/>
			</classpath>
			<src path="src/"			/>
			</javac>
		<!-- Copy necessary resources -->
		<copy todir="${temp.folder}/library.jar.bin" failonerror="true" overwrite="false">
			<fileset dir="src/" excludes="**/*.java, **/package.htm*,null"			/>
		</copy>
		<mkdir dir="${build.result.folder}"/>
		<jar destfile="${build.result.folder}/library.jar" basedir="${temp.folder}/library.jar.bin"/>
		<delete dir="${temp.folder}/library.jar.bin"/>
	</target>

	<target name="librarysrc.zip" depends="init" unless="librarysrc.zip">
		<mkdir dir="${build.result.folder}"/>
		<zip destfile="${build.result.folder}/librarysrc.zip" filesonly="false" whenempty="skip" update="false">
			<fileset dir="src/" includes="**/*.java"			/>
		</zip>
	</target>

	<target name="build.jars" depends="init" description="Build all the jars for the plug-in: org.jlense.test.">
		<available property="library.jar" file="${build.result.folder}/library.jar"/>
		<antcall target="library.jar"/>
	</target>

	<target name="build.sources" depends="init">
		<available property="librarysrc.zip" file="${build.result.folder}/librarysrc.zip"/>
		<antcall target="librarysrc.zip"/>
	</target>

	<target name="gather.bin.parts" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/org.jlense.test_1.0.0"/>
		<copy todir="${destination.temp.folder}/org.jlense.test_1.0.0" failonerror="true" overwrite="false">
			<fileset dir="${build.result.folder}" includes="library.jar"			/>
		</copy>
		<copy todir="${destination.temp.folder}/org.jlense.test_1.0.0" failonerror="true" overwrite="false">
			<fileset dir="${basedir}" includes="bin/,reports/,plugin.xml,META-INF/,com.rpc.core.catalog.hbm.xml,com.rpc.core.hbm.xml,config.doc.xml,.classpath,.project,library.jar,src/,plugin.properties,build.xml,build.properties,RunTest.launch"			/>
		</copy>
	</target>

	<target name="build.zips" depends="init">
	</target>

	<target name="gather.sources" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/org.jlense.test_1.0.0"/>
		<copy file="${build.result.folder}/librarysrc.zip" todir="${destination.temp.folder}/org.jlense.test_1.0.0" failonerror="false" overwrite="false"/>
		<copy todir="${destination.temp.folder}/org.jlense.test_1.0.0" failonerror="false" overwrite="false">
			<fileset dir="${basedir}" includes="src/,reports/,.classpath,.project,META-INF/,com.rpc.core.catalog.hbm.xml,com.rpc.core.hbm.xml,config.doc.xml,fonts/,.svn/,plugin.xml,plugin.properties,build.xml,build.properties,RunTest.launch"			/>
		</copy>
	</target>

	<target name="gather.logs" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/org.jlense.test_1.0.0"/>
		<copy file="${temp.folder}/library.jar.bin.log" todir="${destination.temp.folder}/org.jlense.test_1.0.0" failonerror="false" overwrite="false"/>
	</target>

	<target name="clean" depends="init" description="Clean the plug-in: org.jlense.test of all the zips, jars and logs created.">
		<delete file="${build.result.folder}/library.jar"/>
		<delete file="${build.result.folder}/librarysrc.zip"/>
		<delete file="${plugin.destination}/org.jlense.test_1.0.0.jar"/>
		<delete file="${plugin.destination}/org.jlense.test_1.0.0.zip"/>
		<delete dir="${temp.folder}"/>
	</target>

	<target name="refresh" depends="init" if="eclipse.running" description="Refresh this folder.">
		<eclipse.convertPath fileSystemPath="E:/workspaces/CORE_ALL/org.jlense.test" property="resourcePath"/>
		<eclipse.refreshLocal resource="${resourcePath}" depth="infinite"/>
	</target>

	<target name="zip.plugin" depends="init" description="Create a zip containing all the elements for the plug-in: org.jlense.test.">
		<delete dir="${temp.folder}"/>
		<mkdir dir="${temp.folder}"/>
		<antcall target="build.jars"/>
		<antcall target="build.sources"/>
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<antcall target="gather.sources">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<delete>
			<fileset dir="${temp.folder}" includes="**/*.bin.log"			/>
		</delete>
		<zip destfile="${plugin.destination}/org.jlense.test_1.0.0.zip" basedir="${temp.folder}" filesonly="true" whenempty="skip" update="false"/>
		<delete dir="${temp.folder}"/>
	</target>

</project>
